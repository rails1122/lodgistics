.page-header.page-header-block
  .page-header-section
    h4.nm
      | Item Consumption
      .pull-right#table-actions
.row
  .report-sidebar.col-md-3
    .panel.panel-default
      .panel-body
        .row.mb10
          .col-md-12
            span.radio.custom-radio.custom-radio-primary  
              input#filter-option-1 name="sort_type" value="0" type="radio"
              label for="filter-option-1"= raw t('.top_5_consumed_items')
        .row.mb10
          .col-md-12
            span.radio.custom-radio.custom-radio-primary  
              input#filter-option-2 name="sort_type" value="1" type="radio"
              label for="filter-option-2"= raw t('.top_10_consumed_items')
        .row.mb10
          .col-md-12
            span.radio.custom-radio.custom-radio-primary  
              input#filter-option-3 name="sort_type" value="2" type="radio"
              label for="filter-option-3"  &nbsp; Select vendors
        .row.mb10
          .col-md-12
            select#vendors-filter.form-control multiple="multiple" placeholder=("Select vendor...") 
              option value=""  Select a vendor...
              = options_from_collection_for_select Vendor.all, :id, :name

        .row.mb10
          .col-md-12
            span.radio.custom-radio.custom-radio-primary  
              input#filter-option-4 name="sort_type" value="3" type="radio"
              label for="filter-option-4"  &nbsp; Select items
        .row.mb10
          .col-md-12
            select#items-filter.form-control multiple="multiple" placeholder=("Select vendor...") 
              option value=""  Select an item...
              = options_from_collection_for_select Item.all, :id, :name

        .row.mb10
          .col-md-12
            span.radio.custom-radio.custom-radio-primary  
              input#filter-option-5 name="sort_type" value="4" type="radio"
              label for="filter-option-5"  &nbsp; Select categories
        .row.mb10
          .col-md-12
            select#categories-filter.form-control multiple="multiple" placeholder=("Select vendor...") 
              option value=""  Select a category...
              = options_from_collection_for_select Category.all, :id, :name
  
        .row.mb10
          .col-md-12
            span.radio.custom-radio.custom-radio-primary  
              input#filter-option-6 name="sort_type" value="5" type="radio"
              label for="filter-option-6"  &nbsp; Select lists
        .row
          .col-md-12
            select#lists-filter.form-control multiple="multiple" placeholder=("Select list...") 
              option value=""  Select a list...
              = options_from_collection_for_select List.all, :id, :name

  .report-body.col-md-9
    .panel
      .panel-heading.black
        .fc.fc-ltr.fc-unthemed#calendar-control
          .fc-toolbar
            .fc-left
              .fc-button-group
                a.fc-button.fc-state-default.fc-corner-left#offset-minus <
                a.fc-button.fc-state-default.fc-corner-right#offset-plus >
            .fc-right
              .fc-button-group.date-range-type
                a.fc-button.fc-state-default.fc-corner-left data-value="quarter" = t('.quarter')
                a.fc-button.fc-state-default data-value="halfYear" = t('.6_month')
                a.fc-button.fc-state-default.fc-corner-right data-value="year" = t('.year')

            .fc-center
              h2.text-center#date-range-indicator ...

      .panel-collapse.pull.out

        table.searchable-table.table.no-bottom-border.table-hover.items-consumption#report-data
          thead
            tr
              th= t('.item_name')
              th.text-center width="150px"= t('.last_inventory_time')
              /th.text-center= t('.last_order_sent_at')
              th.text-center width="150px"= t('.avarage_monthly_orders')
              th.text-center width="100px"= t('.avarage_order_quantity')
              th.text-center width="100px"= t('.order_cost')
              th
              th
              th


        #loading.indicator
          span.spinner

  javascript:
    export_filename = "Items Consumption Report - " + moment().format("YYYY.MM.DD") + " - #{current_user.name}"
  coffee:
    $(document).ready ->
      offset = 0
      dateRangeIndicator = $('#date-range-indicator')
      loading            = $('#loading')
      dateRange          = new DateRange('quarter')
      $vendorsFilter     = undefined
      vendorsFilter      = undefined

      selectizeFilters = [
        {name: 'items', selector: '#items-filter', columnIdx: 0, selectizeInstance: undefined, selectedValues: {}, filterFunction: undefined}
        {name: 'vendors', selector: '#vendors-filter', columnIdx: 5, selectizeInstance: undefined, selectedValues: {}, filterFunction: undefined}
        {name: 'categories', selector: '#categories-filter', columnIdx: 6, selectizeInstance: undefined, selectedValues: {}, filterFunction: undefined}
        {name: 'lists', selector: '#lists-filter', columnIdx: 7, selectizeInstance: undefined, selectedValues: {}, filterFunction: undefined}
      ]

      # DataTables initialization:
      table = $('table#report-data').DataTable(
        dom: 'Trt'
        aoColumns: [null, null, {sType: 'avg_orders_sorter'}, null, null, { bVisible: false }, { bVisible: false }, { bVisible: false }]
        aoColumnDefs: [
          { bSortable: false, aTargets: [ 'nosort' ] }
        ]
        oTableTools:
          sSwfPath: "/assets/adminre_theme_v120/plugins/datatables/tabletools/swf/copy_csv_xls_pdf.swf"
          aButtons: [
            { sExtends: "print" }
            { sExtends: "pdf", sFileName: export_filename + ".pdf" }
            { sExtends: "csv", sFileName: export_filename + ".csv" }
          ]
      )

      $('.DTTT').appendTo('#table-actions')

      resetFilters = ->
        $.each( selectizeFilters, (i, sFilter)->
          table.columns(sFilter.columnIdx).search("").page.len(-1) # resetting previous filters
          sFilter.selectizeInstance.disable()
          sFilter.selectizeInstance.clear()
        )


      loadData = ->
        dateRangeIndicator.text(dateRange)
        loading.show()

        $.debounce(1000, ->
          $.ajax({
            dataType: 'json'
            type: "GET"
            url: Routes.report_path("render/items_consumption")
            data: { from: dateRange.from4rails(), to: dateRange.to4rails() }
            success: (data)->
              table.clear().draw()
              $(data).each (i, el)->

                table.row.add( [
                  el.name
                  if !!el.last_inventory_time then moment(el.last_inventory_time).format('DD-MM-YYYY') else ""
                  #if !!el.last_order_sent_at then (new Date(el.last_order_sent_at * 1000)).format('dd-MM-yyyy') else ""
                  if 0 < el.avg_monthly_orders < 1 then "Less than 1" else el.avg_monthly_orders
                  el.avg_order_qty
                  el.avg_order_cost
                  el.vendor    # hidden
                  el.category  # hidden
                  el.lists     # hidden
                  el.item_id   # hidden
                ] ).draw()
              sortAndOrder()
              dataRows()
            complete: -> loading.hide()
          })
        )()

      # loading data after page render complete:
      loadData()

      applyFilter = (filter)->
        filterTermsArray = (val for key, val of filter.selectedValues)
        # escaping search string for using in the regexp:
        filterTermsArray = $.map(filterTermsArray, (term)-> term.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&") )
        table.columns(filter.columnIdx).search( filterTermsArray.join("|"), true, false).draw()

      sortAndOrder = ->
        filterSelected = $('input:radio[name="sort_type"]:checked').val()

        resetFilters()
        if filterSelected is undefined
        else if filterSelected is "0" # top 5 vendors
          table.order( [ 3, 'desc' ] ).page.len(5).draw()
        else if filterSelected is "1" # top 10 vendors
          table.order( [ 3, 'desc' ] ).page.len(10).draw()
        else
          filterName = { '2': 'vendors', '3': 'items', '4': 'categories', '5': 'lists' }[filterSelected]
          vendorsObject = $.grep(selectizeFilters, (x)-> x.name == filterName )[0]
          vendorsObject.selectizeInstance.enable()
          applyFilter(vendorsObject)

      $.each(selectizeFilters, (i, filter)->
        selectElem = $(filter.selector).selectize(
          onItemAdd: (value, data)->
            filter.selectedValues[value] = $(data).text()
            applyFilter(filter)
          onItemRemove: (value)->
            delete filter.selectedValues[value]
            applyFilter(filter)
        )
        filter.selectizeInstance = selectElem[0].selectize
      )

      resetFilters()

      $('input:radio[name="sort_type"]').on 'change', sortAndOrder

      # events handlers:
      $('.date-range-type > a').on('click', ->
        $(this).parent().find('a').removeClass('fc-state-active')
        $(this).addClass 'fc-state-active'
        if dateRange.type isnt $(this).data('value') # reset all offsets if changed $range type
          dateRange.setType($(this).data('value'))
          loadData()
      )

      $(".date-range-type > a[data-value='#{ dateRange.type }']").trigger('click')

      # date $range navigation buttons
      $('#offset-minus').on 'click', -> dateRange.backward(); loadData()
      $('#offset-plus').on 'click', -> dateRange.forward(); loadData()

      nCloneTh = document.createElement("th")
      nCloneTd = document.createElement("td")
      nCloneTd.innerHTML = """<a href="#" class="text-primary detail-toggler" style="text-decoration:none;font-size:14px;"><i class="ico-plus-circle"></i></a>"""
      nCloneTd.className = "center"

      $("#report-data thead tr").each ->
        @insertBefore nCloneTh, @childNodes[0]
        return

      # DATA ROWS:
      dataRows = ->
        fnFormatDetails = (item_id)->
          markup = $ """
            <tr><td colspan="7">
              <div class="row-chart-data">
                <div class="chart mt10" style="height:150px;"></div>
              </div>
            </td></tr>
          """

          plotOptions =
            series:
              lines: { show: true }
              splines: { show: false, tension: 0.4, lineWidth: 2, fill: 0 }
              points: { show: true, radius: 3, lineWidth: 4, fill: true, fillColor: "#e12544" }
            grid: { borderColor: "#eee", borderWidth: 1, hoverable: true, backgroundColor: "#fcfcfc" }
            tooltip: true
            tooltipOpts: {content: "%x : %y" }
            xaxis: { tickColor: "#ccc", mode: "categories" }
            yaxis: { tickColor: "#ccc" }
            shadowSize: 0

          # Load chart data
          $.ajax( url: Routes.report_path("render/item_orders_chart_data"), type: "GET", data: {id: item_id, from: dateRange.from4rails(), to: dateRange.to4rails() },  dataType: "json" ).done (response) ->
            chartData =
              $.map(response, (point)->
                datePoint = moment(point[0])

                switch dateRange.type
                  when "quarter"
                    return [[ "Q#{ Math.ceil((datePoint.month() + 1) / 3) }, #{datePoint.year()}", point[1] ]]
                  when "half_year"
                    return [[ "#{ moment(point[0]).format('MMM, YYYY') } - <br>#{ datePoint.startOf('day').add(-1, 'm').add(6, 'M').format('MMM, YYYY') }", point[1] ]]
                  when "year"
                    return [[ datePoint.format('YYYY'), point[1] ]]
              )

            $.plot markup.find('.chart'), [ label: "Orders", data: chartData, color: '#e12544' ], plotOptions
            #$(self.element).parents(".panel").find(".indicator").removeClass "show"
          markup[0]

        $("#report-data tbody tr").each -> # adding buttons to expand rows
          @insertBefore nCloneTd.cloneNode(true), @childNodes[0]

        # Add event listener for opening and closing details
        $("#report-data tbody td .detail-toggler").on "click", (e) ->
          e.preventDefault()
          tr  = $(this).parents("tr")
          row = table.row(tr)
          tr.toggleClass "open"

          if table.row(row).child.isShown()
            $(this).children().attr "class", "ico-plus-circle"
            row.child.hide()
          else
            $(this).children().attr "class", "ico-minus-circle"
            #spinner = $('<div class="indicator show">Loading Chart Data ... <span class="spinner spinner7"></span></div>')
            item_id = row.data()[8] # item id is stored in the last column of the row
            row.child(fnFormatDetails(item_id)).show()

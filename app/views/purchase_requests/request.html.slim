- body_class 'messaging-enabled-form'

= simple_form_for @purchase_request, html: {class: 'purchase_request request-order form-horizontal'} do |f|
  .page-header.page-header-block
    .page-header-section
      h4.title.semibold.clearfix
        span.pull-left= t('.title', number: @purchase_request.number)
        = render partial: 'shared/messages', locals: {model: @purchase_request, add_message: true}
        .pull-right
          input#commit type='hidden' name='commit'
          = link_to_with_icon 'ico-pencil', t('shared.messages.add_message'), 'javascript:void(0)', class: 'btn btn-info add-message-btn'
          .btn-group.narrow-dropdown
            a.btn.btn-primary.test-next-btn type="button" data-action="next" 
              i.ico-next
              |  #{ t('.next') }
            a.btn.btn-primary.dropdown-toggle data-toggle="dropdown" type="button" 
              span.caret
            ul.dropdown-menu role="menu"
              li
                a  href='#' data-action='commit'
                  i.ico-save
                  |  #{ t('.save') }
              / li
              /   a  href='#' data-action='submit'
              /     i.ico-check
              /     |  #{ t('.finish') }
  

  .panel.panel-default
    = render 'requests_steps_indicator', step: PurchaseRequest::STATES.index(@purchase_request.state.to_sym)
    
    .row.visible-xs
      .col-md-12.mt10
        .list-table.pa10
            li
              h5.semibold.nm= t('.total_price')
            li.text-right
              h3.semibold.nm.text-primary
                | $
                span.total-price-value
    table.column-filtering.searchable-table.table.mt10.responsive-stacktable.table-striped
      thead
        tr
          td
            input.form-control name="search_engine" placeholder=t('.item_name') type="search" /
          td
            input.form-control name="search_engine" placeholder=t('.vendor') type="search" /
          td
            input.form-control name="search_engine" placeholder=t('.par') type="search" /
          td
            input.form-control name="search_engine" placeholder=t('.on_hand_qty') type="search" /
          td
            input.form-control name="search_engine" placeholder=t('.request_quantity') type="search" /
          td
            input.form-control name="search_engine" placeholder=t('.purchase_price') type="search" /
          td

        tr
          th.width-min200= t('.item_name')
          th.text-center= t('.vendor')
          th.text-center.nosort width="100px"= t('.par')
          th.text-center= t('.on_hand_qty')
          th.text-right width="100px"= t('.request_quantity')
          th.text-right= t('.purchase_price')
          th.text-right.nosort.width-min120 = t('.total_item_cost')
      tbody
        = f.simple_fields_for :item_requests do |g|
          - purchase_unit_name = humanized_unit_format g.object.item.unit
          - price_unit_name    = humanized_unit_format g.object.item.price_unit
          tr
            td data-title=(t('.item_name'))
              .hidden-sm.hidden-xs= render 'shared/open_pr_po_for_item', item: g.object.item
              span.item-name= g.object.item.try :name
              = g.input :item_id, as: :hidden
              = g.input :id, as: :hidden
            td.text-center data-title=(t('.vendor'))
              = g.object.item.vendors.first.try(:name) || '-'
            td.text-center data-title=(t('.par'))
              - if g.object.item.par_level.present?
                = g.object.item.par_level
                br.hidden-xs
                span.unit-format= humanized_unit_format g.object.item.inventory_unit
              - else
                .visible-xs -
            td.text-center data-title=(t('.on_hand_qty'))
              - unit = purchase_unit_name.try(:pluralize)
              - if g.object.count
                = g.object.count
                br.hidden-xs
                span.unit-format= humanized_unit_format g.object.item.inventory_unit
              - else
                span.badge.badge-danger= t('.skipped')
            td.text-right data-title=(t('.request_quantity')) data-item-price="#{ g.object.item.price.to_f }" data-price-value="#{ g.object.price_unit_factor.to_f }"
              .form-group
                .col-sm-12 style="padding: 0px;"
                  .has-feedback
                    = g.text_field :quantity, value: g.object.quantity || g.object.order_quantity, as: :string, class: 'width100 pull-right text-right numeric-input input-sm form-control quantity_input test_quantity_input', type: "number"
                    span.ico-warning.form-control-feedback data-toggle="tooltip" title="#{ t('.quantity_validation')}"
                span.purchase-unit-name= purchase_unit_name

              = g.input_field :_destroy, value: nil, as: :hidden, class: "destroy_input"
            td.text-right data-title=(t('.purchase_price'))
              = humanized_money_with_symbol(g.object.item.price)
              - if price_unit_name && purchase_unit_name && price_unit_name != purchase_unit_name
                br.hidden-xs
                span.unit-format= price_unit_name
            td.text-right.item-total-price data-title=(t('.total_item_cost'))
              span.text-primary.bold
                | $
                span.value

    .row.hidden-xs
      .col-md-12
        .panel-footer.mt10
          .list-table.pa10
              li
                h5.semibold.nm= t('.total_price')
              li.text-right
                h3.semibold.nm.text-primary
                  | $
                  span.total-price-value

- content_for :js do
  javascript:
    $(document).ready(function(){
      // submit buttons:
      var submitButtons = $('.purchase_request .page-header-section a[data-action]');
      submitButtons.on('click', function(){
        if( $(this).prop('disabled') ) return false; // don't make any action if link is disabled

        $('input#commit').val($(this).data('action'));
        $(this).closest('form').submit();
        return false;
      });


      var totalPriceContainer  = $('.total-price-value');
      var itemTotalPricesArray = [];
      var itemQuantitiesArray  = [];

      $('.quantity_input').each(function(inputIndex){
        var input = $(this);
        var itemCost = input.closest('td').data('item-price');
        var itemTotalPriceContainer = input.closest('tr').find('td:last-child span.value')
        var form_group = input.closest('.form-group');
        var priceValue = input.closest('td').data('price-value');

        input.on('input change keypress keydown', function(){
          var input_val = input.val();
          itemTotalPricesArray[inputIndex] = formatPrice(input_val * itemCost * priceValue)
          itemTotalPriceContainer.text( itemTotalPricesArray[inputIndex] )

          var sum = 0;
          for (var i=itemTotalPricesArray.length; i--;) { sum += parseFloat(itemTotalPricesArray[i]) }
          totalPriceContainer.text( formatPrice(sum) )

          // quantities validation logic:
          itemQuantitiesArray[inputIndex] = parseFloat(input_val);
          var allZeroOrBlank = true; // check if all quantities equals to zero:
          for (var i=itemQuantitiesArray.length; i--;)
            if(itemQuantitiesArray[i] !== 0 && !!itemQuantitiesArray[i]){ allZeroOrBlank = false; break; } 

          // add spot classes
          var valIsZero = input_val == 0;
          form_group.toggleClass("has-error", valIsZero);
          input.next().toggle(valIsZero);
          input.toggleClass("quantity-validation-error", valIsZero);

          // if all quantities set to 0 => disable submit buttons: 
          allZeroOrBlank ? submitButtons.attr('disabled', true) : submitButtons.removeAttr('disabled')
          input.closest('td').find('input.destroy_input').val(parseFloat(input.val()) === 0 || !input.val() ? true : "")
        }).change();
      });
    });
